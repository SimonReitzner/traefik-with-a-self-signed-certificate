version: "3.8"

services:
  traefik-proxy:
    image: traefik:v3.1
    container_name: traefik-proxy
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro"
      - "./certs:/etc/traefik/certs:ro"
    networks:
      - traefik_net
    labels:
      traefik.enable: "true"
      # Dashboard Router
      traefik.http.routers.dashboard.rule: "Host(`${VM_IP}`)"
      traefik.http.routers.dashboard.tls: "true"
      traefik.http.routers.dashboard.entrypoints: "websecure"
      traefik.http.routers.dashboard.service: "api@internal"

  httpd:
    image: httpd:2.4
    container_name: httpd
    networks:
      - traefik_net
    labels:
      traefik.enable: "true"
      # HTTPD Router
      traefik.http.routers.httpd.rule: "Host(`${VM_IP}`) && PathPrefix(`/httpd`)"
      traefik.http.routers.httpd.tls: "true"
      traefik.http.routers.httpd.entrypoints: "websecure"
      traefik.http.routers.httpd.middlewares: "httpdStrip"
      traefik.http.routers.httpd.service: "httpd"
      traefik.http.services.httpd.loadbalancer.server.port: "80"
      # Middlewares
      traefik.http.middlewares.httpdStrip.stripPrefix.prefixes: "/httpd"

networks:
  traefik_net:
    name: traefik_net
